&lt;p&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small;&quot;&gt;ASP.NET AJAX server controls mainly provide functionality for having partial page updates, update progress indication, and frequent updates based on a timer. Also, it takes care of generating all the JavaScript that is required to perform these functionalities. So with these controls, the developer doesn&#39;t have to write any JavaScript to implement AJAX.&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;The controls provided by ASP.NET for having AJAX functionality are:&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;ol&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small;&quot;&gt;ScriptManager&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small;&quot;&gt;ScriptManagerProxy&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small;&quot;&gt;UpdatePanel&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small;&quot;&gt;UpdateProgress&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small;&quot;&gt;Timer&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;Let us try to understand these controls one by one and try to work out an example to see how each of them can be used to implement AJAX features.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-weight: bold; font-family: Arial; font-size: small;&quot;&gt;1. Script Manager&lt;/span&gt;&lt;/div&gt;&lt;/p&gt;&lt;p&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small;&quot;&gt;The&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small; border-style: initial; border-color: initial;&quot;&gt;ScriptManager&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small;&quot;&gt;control is a non visual component on the page. This control is required on each page that needs to have AJAX features implemented on it. The main functionality of a&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small; border-style: initial; border-color: initial;&quot;&gt;ScriptManager&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small;&quot;&gt;control is to push Microsoft AJAX framework code to the client side when the page is being rendered. This control can be thought of as the agent which will write the JavaScript required on the client side to facilitate AJAX functionality.&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;There should be only one&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;ScriptManager&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;control on the page that needs AJAX functionality. Let us create a webpage and add a&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;ScriptManager&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;control to it:&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-style: italic;&quot;&gt;&amp;lt;asp:ScriptManager ID=&quot;ScriptManager1&quot; runat=&quot;server&quot; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-weight: bold;&quot;&gt;2. ScriptManagerProxy&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;We have seen that the&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;ScriptManager&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;control is required on the page that needs AJAX functionality. We also know that there should be only one&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;ScriptManager&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;control on the page. Now consider a situation where there is a master page and content page and both need AJAX functionalities. There is one more scenario, let&#39;s say we have a&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;UserControl&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;that needs AJAX and it has to be added on a page where AJAX is already implemented. Since there could be only one&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;ScriptManager&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;on the page, adding a&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;ScriptManager&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;control in these scenarios will result in two&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;ScriptManager&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;controls on the page. So to handle such conditions, the&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;ScriptManagerProxy&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;control can be used.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;ScriptManagerProxy&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;should be used on content pages that have master pages containing a&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;ScriptManager&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;control. It can also be used inside&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;UserControl&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;s when the page containing the UserControl already has the&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;ScriptManager&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;control.&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-weight: bold;&quot;&gt;3. UpdatePanel&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-weight: bold;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;This is a container control that contains other ASP.NET controls. This control defines a region that is capable of making partial page updates. We can add various server controls inside an&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;UpdatePanel&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;and this controls inside the&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;UpdatePanel&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;will communicate to the server irrespective of the page&#39;s postback.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;Let us add an&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;UpdatePanel&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;on the page and some server controls inside it. We will try to do some arithmetic operations inside this&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;UpdatePanel&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;and try to get the results without a postback. Once the controls are added, the design view of the page will look like:&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;img width=&quot;326&quot; height=&quot;413&quot; alt=&quot;asp.net ajax server control article image&quot; src=&quot;http://www.codeproject.com/KB/ajax/401903/updatePanel.JPG&quot; style=&quot;color: rgb(51, 0, 0); margin: 0px; padding: 0px; border: 0px; overflow: auto; max-width: 100%; height: auto;&quot;&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;Now let us handle the button click event and perform the arithmetic operations on that:&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;protected void btnCalculate_Click(object sender, EventArgs e)&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; try&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int a = Convert.ToInt32(txtA.Text);&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int b = Convert.ToInt32(txtB.Text);&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int sum = a + b;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int difference = a - b;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int multiplication = a * b;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Label1.Text = string.Format(&quot;Sum = {0}&quot;, sum);&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Label2.Text = string.Format(&quot;Difference = {0}&quot;, difference);&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Label3.Text = string.Format(&quot;Multiplication = {0}&quot;, multiplication);&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; catch (Exception ex)&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;Now since all the controls are inside the&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;UpdatePanel&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;control, clicking the button will not result in a postback but it will asynchronously call the server-side function and give us the results. When we run the page in the browser:&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;img width=&quot;362&quot; height=&quot;394&quot; alt=&quot;asp.net ajax server control article image&quot; src=&quot;http://www.codeproject.com/KB/ajax/401903/updatePanelRunning.JPG&quot; style=&quot;color: rgb(51, 0, 0); margin: 0px; padding: 0px; border: 0px; overflow: auto; max-width: 100%; height: auto;&quot;&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;Notice that clicking on the button does not cause the postback but gives us the result asynchronously. We can control partial page updates using the&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;UpdateMode&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;property of the&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;UpdatePanel&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;and setting&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;Trigger&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;.&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-weight: bold;&quot;&gt;4. UpdateProgress&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;The scenario we just handled gave us the results instantly, but imagine a scenario where the server side processing for the asynchronous event takes some time. If the operation is time consuming then we can provide the user feedback by using the&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;UpdateProgress&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;control inside the&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;UpdatePanel&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;Let us have one more&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;UpdatePanel&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;on the page doing the same task, but this time we will make the server side functionality take more time than required (by using&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;sleep&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;). We will add a simple&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;UpdateProgress&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;control to make the user aware of the fact that some processing is being done by the page right now. Let us look at the Design view of this&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;UpdatePanel&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;and&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;UpdateProgress&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;control now.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;img alt=&quot;asp.net ajax server control article image&quot; src=&quot;http://www.codeproject.com/KB/ajax/401903/updateProgress.JPG&quot; style=&quot;color: rgb(51, 0, 0); margin: 0px; padding: 0px; border: 0px; overflow: auto; max-width: 100%; height: auto;&quot;&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;Let us handle the server side event for button click but this time let&#39;s add a sleep for some time here.&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;protected void btnCalculate2_Click(object sender, EventArgs e)&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; try&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //Lets pretend that we are doiing something time consuming&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; System.Threading.Thread.Sleep(3000);&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int a = Convert.ToInt32(txtA2.Text);&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int b = Convert.ToInt32(txtB2.Text);&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int sum = a + b;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int difference = a - b;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int multiplication = a * b;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Label4.Text = string.Format(&quot;Sum = {0}&quot;, sum);&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Label5.Text = string.Format(&quot;Difference = {0}&quot;, difference);&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Label6.Text = string.Format(&quot;Multiplication = {0}&quot;, multiplication);&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; catch (Exception ex)&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;Now when we run the page and click the button, the&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;updateProgress&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;message will be shown.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;img alt=&quot;asp.net ajax server control article image&quot; src=&quot;http://www.codeproject.com/KB/ajax/401903/updateProgressRunning.JPG&quot; style=&quot;color: rgb(51, 0, 0); margin: 0px; padding: 0px; border: 0px; overflow: auto; max-width: 100%; height: auto;&quot;&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;We can also have images and animated GIFs inside the&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;updateProgress&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;control to provide more user friendly feedback.&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-weight: bold;&quot;&gt;5. Timer&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;There might be some scenarios where we want to update a particular portion of the page after some time duration irrespective of user action. To achieve this, we can use the&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;Timer&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;control. Let us add a timer control to our page and display the server time after every 5 seconds. The design view of the page will look like:&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;img alt=&quot;asp.net ajax server control article image&quot; src=&quot;http://www.codeproject.com/KB/ajax/401903/timer.JPG&quot; style=&quot;color: rgb(51, 0, 0); margin: 0px; padding: 0px; border: 0px; overflow: auto; max-width: 100%; height: auto;&quot;&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;Let us now handle the&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;timer_tick&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;event. Since the control is inside the&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); border-style: initial; border-color: initial;&quot;&gt;UpdatePanel&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;the time will be updated after every 5 seconds without causing any postback. Let us look at the server side code for the timer event and then run the page and see the time changing every 5 seconds.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;protected void Timer1_Tick(object sender, EventArgs e)&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;{&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&amp;nbsp; &amp;nbsp; Label8.Text = DateTime.Now.ToString();&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 0, 0); font-family: Arial; font-size: small;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/span&gt;&lt;/p&gt;