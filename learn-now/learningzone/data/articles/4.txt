&lt;div style=&quot;font-weight: normal; font-style: normal; text-align: justify;&quot;&gt;&lt;b style=&quot;font-size: small; font-family: Arial;&quot;&gt;Overview:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-weight: normal; font-style: normal; font-variant: normal; line-height: normal;&quot;&gt;&lt;p style=&quot;text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;When you need to store or retrieve data that is accessing and manipulating data within a database is a rather straightforward operation in SQL server database, and so we will go for T-SQL with four simple commands –&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;SELECT&lt;/code&gt;,&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;INSERT&lt;/code&gt;,&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;DELETE&lt;/code&gt;, and&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;UPDATE&lt;/code&gt;, and perform all the required tasks. The skill in working with databases lies in being able to not just work with these commands, but also complete each unit of work efficiently.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;We will cover the different types of stored procedures used in SQL Server and their usage. We will also examine the working of stored procedures, the potentially tricky areas, and how to avoid them.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;To increase performances, every developer should consider a number of factors during development. However, we will focus on running T-SQL from within stored procedures; we will examine what constitutes a stored procedure and discuss different types. We will cover:&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;margin: 10px 0px; padding: 0px 0px 0px 40px; border: 0px; border-image-source: initial; border-image-slice: initial; border-image-width: initial; border-image-outset: initial; border-image-repeat: initial; background-color: rgb(255, 255, 255);&quot;&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;The difference between system stored procedures and user stored procedures&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Creating and designing stored procedures&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Using parameters and best practices&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Flow control statements &amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Recursion&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Return values&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;font style=&quot;font-size: small; font-family: Arial;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-weight: normal; font-style: normal; text-align: justify; font-variant: normal; line-height: normal;&quot;&gt;&lt;b style=&quot;font-size: small; font-family: Arial;&quot;&gt;What is Stored Procedure?&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-weight: normal;&quot;&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; font-variant: normal; line-height: normal; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;If a repetitive T-SQL task has to be executed within an application, then the best repository for it is a program called a&amp;nbsp;&lt;strong style=&quot;margin: 0px; padding: 0px; border: 0px;&quot;&gt;stored procedure&lt;/strong&gt;, stored in SQL Server. Storing the code inside the SQL Server object gives us many advantages, like:&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;font-style: normal; font-weight: normal; font-variant: normal; line-height: normal; margin: 10px 0px; padding: 0px 0px 0px 40px; border: 0px; border-image-source: initial; border-image-slice: initial; border-image-width: initial; border-image-outset: initial; border-image-repeat: initial; background-color: rgb(255, 255, 255);&quot;&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Security due to encryption&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Performance gains due to compilation&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Being able to hold the code in a central repository:&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;ul style=&quot;margin: 10px 0px; padding: 0px 0px 0px 40px; border: 0px;&quot;&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Altering the code in SQL Server without replicating in several different programs&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Being able to keep statistics on the code to keep it optimized&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Reduction in the amount of data passed over a network by keeping the code on the server&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Hiding the raw data by allowing only stored procedures to gain access to the data&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; font-variant: normal; line-height: normal; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;You may have executed some ad-hoc queries for tasks like inserting data, querying information in other systems, or creating new database objects such as tables. All these tasks can be placed within a stored procedure, so that any developer can run the same code without having to recreate the T-SQL commands. Also, generalizing the code for all values makes it generic and reusable.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; font-variant: normal; line-height: normal; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Stored procedures are more than just tools for performing repetitive tasks. There are two main types of stored procedure – &lt;span style=&quot;font-style: normal; font-weight: bold; color: rgb(255, 102, 102);&quot;&gt;system stored procedures&lt;/span&gt; and &lt;span style=&quot;font-style: normal; font-weight: bold; color: rgb(255, 102, 102);&quot;&gt;user-defined stored procedures&lt;/span&gt;. We also have &lt;b style=&quot;font-style: normal; color: rgb(255, 102, 102);&quot;&gt;extended stored procedures&lt;/b&gt; that can reside as either system or user-defined types. &lt;i&gt;Extended stored procedures give functionality that is not necessarily contained within SQL Server&lt;/i&gt;, like allowing DOS commands to run and working with e-mail. It is also possible to create your own extended stored procedures.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; font-variant: normal; line-height: normal; background-color: rgb(255, 255, 255);&quot;&gt;&lt;b style=&quot;font-size: small; font-family: Arial;&quot;&gt;Sample Example:&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&lt;b&gt;&amp;nbsp; &lt;/b&gt;/*&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&amp;nbsp; &amp;nbsp; DECLARE @OutPutValue VARCHAR(100)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&amp;nbsp; &amp;nbsp; EXEC spExample &#39;CodeProject&#39;, @OutPutValue OUTPUT&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&amp;nbsp; &amp;nbsp; PRINT @OutPutValue&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; */&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&amp;nbsp; &amp;nbsp; CREATE PROCEDURE [dbo].[spExample]&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; @parameter1 VARCHAR(100)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;,@parameter2 VARCHAR(200) OUTPUT&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&amp;nbsp; &amp;nbsp; AS&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&amp;nbsp; &amp;nbsp; BEGIN&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&amp;nbsp; &amp;nbsp; DECLARE @parameter3 VARCHAR(100)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&amp;nbsp; &amp;nbsp; SET @parameter3 = &#39; Your development resources.&#39;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; IF @parameter1 IS NOT NULL AND LEN(@parameter1) &amp;gt; 1&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SELECT @parameter2 = &#39;The &#39;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;+ @parameter1&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;+ @parameter3&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ELSE&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;&amp;nbsp;SELECT &amp;nbsp;@parameter2 = &#39;CodeProject is cool!&#39;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&amp;nbsp; &amp;nbsp; RETURN&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&amp;nbsp; &amp;nbsp; END&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&amp;nbsp; &amp;nbsp; GO&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;b style=&quot;font-size: small; font-family: Arial;&quot;&gt;&lt;br&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;b style=&quot;font-size: small; font-family: Arial;&quot;&gt;System Stored Procedure:&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;In SQL Server, many administrative and informational activities can be performed by using system stored procedures. Every time we add or modify a table, make a backup plan, or perform any other administrative function from within Enterprise Manager, we actually call a stored procedure specifically written to complete the desired action. These stored procedures are known as system stored procedures, which are functions that enhance the basic functionality of SQL Server itself, either by extending the functionality of an existing system stored procedure or by creating new functionality that enhances the basics of what is already there.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;System stored procedures are prefixed by&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;sp_&lt;/code&gt;, so it is not advisable to use&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;sp_&lt;/code&gt;&amp;nbsp;for any of the stored procedures that we create, unless they form a part of our SQL Server installation. Creating a stored procedure prefixed with&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;sp_&lt;/code&gt;&amp;nbsp;and placing it in the&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;master&lt;/code&gt;&amp;nbsp;database will make it available to any database without the need to prefix the stored procedure with the name of the database. More details can be found at&amp;nbsp;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms187961.aspx&quot; title=&quot;msdn&quot; style=&quot;margin: 0px; padding: 0px; border: 0px; text-decoration: none;&quot;&gt;this link&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Let&#39;s clarify this with an example. If we take the&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;sp_who&lt;/code&gt;&amp;nbsp;&lt;/code&gt;stored procedure, call it&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;sp_mywho&lt;/code&gt;, store it in the&lt;strong style=&quot;margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-weight: normal; font-stretch: normal;&quot;&gt;master&lt;/code&gt;&amp;nbsp;&lt;/strong&gt;database, and move to another database such as&amp;nbsp;&lt;strong style=&quot;margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-weight: normal; font-stretch: normal;&quot;&gt;northwind&lt;/code&gt;&lt;/strong&gt;, we can still&amp;nbsp;&lt;strong style=&quot;margin: 0px; padding: 0px; border: 0px;&quot;&gt;execute&amp;nbsp;&lt;/strong&gt;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;sp_mywho&lt;/code&gt;, rather than having to specify the procedure in the fully qualified manner as&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;master&lt;/code&gt;.&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;dbo&lt;/code&gt;.&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;sp_mywho&lt;/code&gt;.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-weight: bold; font-size: small; font-family: Arial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-weight: bold; font-size: small; font-family: Arial;&quot;&gt;User Stored Procedures:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-style: normal; font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;A user stored procedure is any program that is stored and compiled within SQL Server (but not in the master database) and prefixed with&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;sp_&lt;/code&gt;. User stored procedures can be categorized into three distinct types:&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;font-style: normal; font-weight: normal; margin: 10px 0px; padding: 0px 0px 0px 40px; border: 0px; border-image-source: initial; border-image-slice: initial; border-image-width: initial; border-image-outset: initial; border-image-repeat: initial; background-color: rgb(255, 255, 255);&quot;&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;User stored procedures&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Triggers, and&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;User defined functions&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;font-style: normal; font-weight: normal; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-style: normal;&quot;&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;At the time of creation, SQL Server takes our code and parses it for any syntactical errors. Column names and variables are checked for existence at compilation. Even if they don&#39;t exist, any temporary tables created within the stored procedure will also pass the compilation stage. This is known as&amp;nbsp;&lt;strong style=&quot;margin: 0px; padding: 0px; border: 0px;&quot;&gt;deferred name resolution&lt;/strong&gt;. It can be an asset or a drawback, as we can create temporary tables that exist for the lifetime of the stored procedure execution only, which is desirable, but if we define a temporary table and get something wrong later on, such as a column name, then the compilation will not pick up this error.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Once it is compiled, the details of the stored procedure are stored in three system tables in the concerned database, they are as follows:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;b style=&quot;font-family: Arial; font-size: small;&quot;&gt;1. sysobjects&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Contains one row for each object (constraint, default, log, rule, stored procedure, and so on) created within a database. In&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px; border: 0px;&quot;&gt;tempdb&lt;/strong&gt;&amp;nbsp;&lt;/code&gt;only, this table includes a row for each temporary object.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-weight: bold; font-family: Arial;&quot;&gt;2. sysdepends&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Contains dependency information between objects (views, procedures, and triggers) in the database, and the objects (tables, views, and procedures) that are contained in their definition.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-weight: bold; font-family: Arial;&quot;&gt;3. syscomments&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Contains entries for each view, rule, default, trigger, CHECK constraint, DEFAULT constraint, and stored procedure within the database. The&amp;nbsp;&lt;strong style=&quot;margin: 0px; padding: 0px; border: 0px;&quot;&gt;text&lt;/strong&gt;&amp;nbsp;column contains&amp;nbsp;&lt;leo_highlight id=&quot;leoHighlights_Underline_0&quot; leohighlights_keywords=&quot;the%20original&quot; leohighlights_removed_removed=&quot;http%3A//shortcuts.thebrowserhighlighter.com/leonardo/plugin/highlights/3_2/tbh_highlightsBottom.jsp?keywords%3Dthe%2520original%26domain%3Dwww.codeproject.com&quot; leohighlights_underline=&quot;true&quot; nclick=&quot;leoHighlightsHandleClick(&#39;leoHighlights_Underline_0&#39;)&quot; nmouseout=&quot;leoHighlightsHandleMouseOut(&#39;leoHighlights_Underline_0&#39;)&quot; &#246;nmouseover=&quot;leoHighlightsHandleMouseOver(&#39;leoHighlights_Underline_0&#39;)&quot; style=&quot;display: inline; background-image: none; background-attachment: scroll; background-color: transparent; background-repeat: repeat;&quot;&gt;the original&lt;/leo_highlight&gt;&amp;nbsp;SQL definition statements.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-weight: bold; font-size: small; font-family: Arial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-weight: bold; font-size: small; font-family: Arial;&quot;&gt;Performance Consideration:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;When a stored procedure is created, it passes through several steps. First of all, the T-SQL is parsed and resolved, saved to the disk, and stored in SQL Server. The first time the procedure is executed, the procedure is retrieved and optimized, on the basis of any data queries and values passed through parameters. SQL Server will inspect the code and try to use the best indexes on the tables, which are referenced by checking the statistics that are held for those tables.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;The query plan is then cached within SQL Server, ready for any further executions. SQL Server will always use this plan, providing it doesn&#39;t retire the plan. Thus, the performance gain of stored procedures comes from compiled cached plans.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-weight: bold; font-size: small; font-family: Arial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-weight: bold; font-size: small; font-family: Arial;&quot;&gt;Network Consideration:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;You may consider passing T-SQL statements to insert a row into a table, with very few characters. However, creating a stored procedure and passing only the name of the stored procedure, parameters, and their values reduces the characters needed. We can see the extra overhead imposed by the T-SQL statements on our network by multiplying this difference by the number of calls being made. This can be a significant issue, especially if we are using it over the Internet.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-weight: bold; font-size: small; font-family: Arial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-weight: bold; font-size: small; font-family: Arial;&quot;&gt;How Stored Procedure Work:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;When we&amp;nbsp;run a stored procedure, Adaptive Server prepares an execution plan so that the procedure&#39;s execution is very fast. Stored procedures can:&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;font-weight: normal; margin: 10px 0px; padding: 0px 0px 0px 40px; border: 0px; border-image-source: initial; border-image-slice: initial; border-image-width: initial; border-image-outset: initial; border-image-repeat: initial; background-color: rgb(255, 255, 255);&quot;&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Take parameters&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Call other procedures&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Return a status value to a calling procedure or batch to indicate success or failure and the reason for failure&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Return values of parameters to a calling procedure or batch&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: justify; margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Be executed on remote Adaptive Servers&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;The ability to write&amp;nbsp;&lt;leo_highlight id=&quot;leoHighlights_Underline_1&quot; leohighlights_keywords=&quot;smart&quot; leohighlights_removed_removed=&quot;http%3A//shortcuts.thebrowserhighlighter.com/leonardo/plugin/highlights/3_2/tbh_highlightsBottom.jsp?keywords%3Dsmart%26domain%3Dwww.codeproject.com&quot; leohighlights_underline=&quot;true&quot; nclick=&quot;leoHighlightsHandleClick(&#39;leoHighlights_Underline_1&#39;)&quot; nmouseout=&quot;leoHighlightsHandleMouseOut(&#39;leoHighlights_Underline_1&#39;)&quot; &#246;nmouseover=&quot;leoHighlightsHandleMouseOver(&#39;leoHighlights_Underline_1&#39;)&quot; style=&quot;display: inline; background-image: none; background-attachment: scroll; background-color: transparent; background-repeat: repeat;&quot;&gt;smart&lt;/leo_highlight&gt;&amp;nbsp;stored procedures significantly enhances the power, efficiency, and flexibility of SQL. Compiled procedures radically improve the performance of SQL statements and batches. In addition, stored procedures on other Adaptive Servers can be executed if both your server and the remote server are set up to allow remote logins. You can write triggers on your local Adaptive Server that executes procedures on a remote server whenever certain events, such as deletions, updates, or inserts, take place locally.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Stored procedures differ from ordinary SQL statements and from batches of SQL statements in that they are precompiled. The first time you run a procedure, Adaptive Server&#39;s query processor analyzes it and prepares an execution plan that is ultimately stored in a system table. Subsequently, the procedure is executed according to the stored plan. Since most of the query processing work has already been performed, stored procedures execute almost instantly.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-weight: bold; font-size: small; font-family: Arial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-weight: bold; font-size: small; font-family: Arial;&quot;&gt;Parameter Usage:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Data will be passed in and out of a stored procedure, even when the purpose of the procedure is not to return information. All variables defined as parameters have to be prefixed with an&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;@&lt;/code&gt;&amp;nbsp;sign. The normal practice is to define input parameters before any output parameters.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;As with any column in a database, use the data type that is most appropriate for the parameter and if the parameter has to match with a column in the table, then ensure that both the data types match exactly.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&lt;a name=&quot;51&quot; style=&quot;margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;/a&gt;&lt;a name=&quot;page21&quot; style=&quot;margin: 0px; padding: 0px; border: 0px;&quot;&gt;&lt;/a&gt;If the parameter does not match a column but will be still used, for example, as a join condition or a filter condition, then use a data type and size appropriate to the type of data, rather than have everything as character data type. Also, wherever possible, use&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;varchar&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;nvarchar&lt;/code&gt;&amp;nbsp;rather than&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;char&lt;/code&gt;, just as you will in your inline T-SQL, which will avoid unnecessary spaces being passed across networks.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-weight: bold; font-size: small; font-family: Arial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-weight: bold; font-size: small; font-family: Arial;&quot;&gt;Calling a Stored Procedure:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;Many people tend to miss a performance enhancement related to executing or calling a stored procedure. For example, if you wanted to call the&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;[Ten Most Expensive Products]&lt;/code&gt;&amp;nbsp;stored procedure in the&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;northwind&lt;/code&gt;database, you can simply do it as:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;[Ten Most Expensive Products]&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;&lt;span style=&quot;text-align: right;&quot;&gt;You can skip&lt;/span&gt;&lt;span style=&quot;text-align: right;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;text-align: right; margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;EXEC&lt;/code&gt;&lt;span style=&quot;text-align: right;&quot;&gt;(&lt;/span&gt;&lt;code style=&quot;text-align: right; margin: 0px; padding: 0px; border: 0px; font-stretch: normal;&quot;&gt;UTE&lt;/code&gt;&lt;span style=&quot;text-align: right;&quot;&gt;), but you will need it if you run one stored procedure within another.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-weight: normal; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: small; font-family: Arial;&quot;&gt;However, this is not the most efficient way to call a stored procedure. When such a command is processed, SQL Server has a hierarchical method of finding a stored procedure and executing it. First of all, it will take the login ID of the user who wants to execute the procedure and see if a stored procedure of that name exists. If it doesn&#39;t, then SQL Server will look for the stored procedure under the&amp;nbsp;&lt;code style=&quot;margin: 0px; padding: 0px; border: 0px; border-image-source: initial; border-image-slice: initial; border-image-width: initial; border-image-outset: initial; border-image-repeat: initial; font-stretch: normal;&quot;&gt;DBO&lt;/code&gt;&amp;nbsp;login. Hence, always fully qualify your stored procedure with the owner.&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;